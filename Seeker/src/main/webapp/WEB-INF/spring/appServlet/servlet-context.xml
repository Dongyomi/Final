<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd"	>

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- AOP -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- @Transactional어노테이션을 이용한 트랜잭션관리 활성화 -->
	<tx:annotation-driven/>
	
	<!-- 웹소켓 인터셉터 설정 -->
	<!-- <websocket:handlers>
		<websocket:mapping path="/ws/chat" handler="chatHandler"/>
		<websocket:mapping path="/ws/chat" handler="chatHandler"/> 
			<websocket:handshake-interceptors>-->
			<!--  <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>  -->
					<!-- <beans:bean class="web.interceptor.ChatHsIntcp"/>
			</websocket:handshake-interceptors>
	</websocket:handlers>
 	<beans:bean id="chatHandler" class="web.ws.ChatHandler"></beans:bean> -->

	<!-- ===========화상채팅 웹소켓 인터셉터 설정============ -->
	<websocket:handlers>
		<websocket:mapping path="/videows/video" handler="SocketHandler"/>
			<websocket:handshake-interceptors>
				 <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/> 
			</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<beans:bean id="SocketHandler" class="web.ws.SocketHandler"></beans:bean>
	<!-- ===========화상채팅 웹소켓 인터셉터 설정============ -->
	
	<!-- ===========쪽지 웹소켓 인터셉터 설정============ -->
	<websocket:handlers>
		<websocket:mapping path="/message" handler="MessageHandler"/>
			<websocket:handshake-interceptors>
				 <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/> 
			</websocket:handshake-interceptors>
			<websocket:sockjs></websocket:sockjs>
	</websocket:handlers>
	
	<beans:bean id="MessageHandler" class="web.ws.MessageHandler"></beans:bean>
	<!-- ===========쪽지 웹소켓 인터셉터 설정============ -->

	<!-- interceptor 설정 -->
	<interceptors>
	
		<interceptor>
			<mapping path="/board/**"/>
			
			<!-- 인터셉터에서 제외될 URL -->
			<exclude-mapping path="/board/freeWrite"/>
			<exclude-mapping path="/board/freeUpdate"/>
			<exclude-mapping path="/board/freeDelete"/>
	
			<exclude-mapping path="/board/photoWrite"/>
			<exclude-mapping path="/board/photoUpdate"/>
			<exclude-mapping path="/board/photoDelete"/>
		
			
			<!-- 인터셉터 클래스 지정 -->
			<beans:bean class="web.interceptor.BoardInterceptor"/>
			
	</interceptor>
	
	
	
		<interceptor>
			<mapping path="/admin/**"/>
			
			<!-- 인터셉터에서 제외될 URL -->
			<exclude-mapping path="/admin/index"/>
			<exclude-mapping path="/admin/member/login"/>
			<exclude-mapping path="/admin/member/logout"/>
			<exclude-mapping path="/admin/error"/>
			
			<!-- 인터셉터 클래스 지정 -->
			<beans:bean class="web.interceptor.AdminInterceptor"/>
			
		</interceptor>
	</interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<resources mapping="/upload/**" location="/upload/"></resources>
	<resources mapping="/qrImg/**" location="/qrImg/"></resources>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
	
	<!-- InternalResourceViewResolver : JSP 기반의 뷰리졸버 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		
		<!-- order값이 0인 BeanNameViewResolver 이후에 동작한다 -->
		<beans:property name="order" value="1"></beans:property> <!-- ViewResolver의 우선순위를 정해줌 -->
	</beans:bean>
	
	
	<!-- BeanNameViewResolver : 스프링 빈(자바클래스) 기반의 뷰리졸버 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
	
		<!-- order값이 1인 InternalResourceViewResolver보다 먼저 동작한다 -->
		<beans:property name="order" value="0"></beans:property>
	</beans:bean>
	
	<!-- BoardDownload 빈 설정 -->
	<beans:bean id="boarddown" class="web.view.DownloadBoardView" />
	<beans:bean id="QrUtil" class="web.util.QrUtil" />
	
	<!-- MultipartResolver설정 -->
	<!-- 	-> 파일업로드 요청을 처리하는 클래스(스프링 빈) -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
		<!-- 메모리에서 파일을 처리할 수 있는 최대 사이즈 제한 : 1MB -->
		<beans:property name="maxInMemorySize" value="1048576"></beans:property>
		
		<!-- 파일업로드 허용 최대 사이즈 제한 : 10MB -->
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
		
		<!-- 업로드된 파일 하나 당 최대 사이즈 제한 : 5MB -->
		<beans:property name="maxUploadSizePerFile" value="5242880"></beans:property>
	
	</beans:bean>
	
	
	<context:component-scan base-package="com.seeker.www, web.controller, web.service, web.advice, web.ws, web.util"  />
	
		
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"></beans:property>
	</beans:bean>
	<beans:bean id="down" class="web.view.ChatLogdown"></beans:bean>
	
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
	<beans:property name="contentType" value="application/json; charset=utf-8"/>
	</beans:bean>
	
	<context:component-scan base-package="a.b.c, web.controller, web.service, web.ws, web.util"  />
	
	
	
</beans:beans>
